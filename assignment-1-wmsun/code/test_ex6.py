from code import hw1
import pytest
import numpy
import os


@pytest.fixture
def exercise_results():
    return hw1.exercise_6('data/walk.txt', 'figures/walk.png')


WALK_DATA = \
    [1.8993151961450916, 1.948354931038763, 2.1664120840756147, 0.3380400852773826, -0.31939431473918434,
     0.029346699990100256, 0.7299654568810783, -0.07783222809900214, -1.4262421581348472, -0.6503207653215775,
     -1.2624684338002607, -1.8803904240046305, -2.7394227432891194, -2.5919523143557086, -3.8136145338307257,
     -2.3965856358111477, -2.175444376348809, -1.5255518953826348, -0.20487173693723593, -1.5363176480027432,
     -1.3147648080686134, -2.2708213277788607, -4.3769086476780075, -3.9752120372012776, -3.524757834451759,
     -3.229281056136454, -5.180154737785699, -4.341250224549231, -4.168499875086191, -4.220959834243229,
     -3.249622826969312, -2.534558047176028, -3.026594066942976, -1.9264363217521927, -2.098519546344996,
     -3.3339673587656042, -6.164789219542765, -5.680117715191087, -6.807840755180358, -6.54790348148002,
     -7.5910330260490495, -8.302338202148741, -7.211020478245361, -7.197109571395996, -7.193170116280374,
     -6.8243372666844735, -6.091189285047071, -4.79661089675544, -6.311956236143014, -7.304551544793891,
     -7.180760689343759, -7.351784196945653, -7.5490337034204, -7.261435358906471, -6.911784400524006,
     -8.13877756863845, -7.724278460510211, -7.9808502984553655, -6.773783312027907, -5.311721073870622,
     -5.6268316785900465, -5.447265776829418, -4.964080069712935, -3.78812366176711, -4.021470489546316,
     -4.424154709646955, -3.7734351400341577, -2.472441214368043, -2.9027367926317407, -4.004122945032866,
     -4.874480252937951, -6.012814761910267, -5.29644800564054, -4.4196513128441, -2.89749707284256,
     -4.8129421053165755, -4.073199640525291, -5.682238529365399, -4.8282351785504245, -3.6270189588021853,
     -3.347414146178139, -2.8035609249757747, -2.3752642927415355, -1.8749950911038082, -1.0081356667099,
     -2.4617316618866942, -0.21006726612256976, -2.214815069681316, -1.7398102784395593, -0.6996551626309515,
     0.5670816778561287, 0.5868718664983752, 0.12469634389698814, -1.1034282971878806, -2.183413612822611,
     -0.5177644547744127, -0.15525327420318408, -1.732955046753034, -2.55436476207227, -3.126401509702986]


WALK_DATA_SCALED = \
    [0.9489725362382571, 0.9583413211558232, 1.0, 0.6506990903767846, 0.5250996860464179,
     0.5917248333074403, 0.7255743832031736, 0.5712488595457705, 0.31364219338807353, 0.46187791811145185,
     0.3449303070323724, 0.226879541982129, 0.06276590935209603, 0.09093936366162603, -0.14245281517037467,
     0.12826314600489974, 0.1705110272545527, 0.29466958738782023, 0.5469786256850198, 0.29261284664498777,
     0.3349393581915794, 0.15228975941983203, -0.2500672100974388, -0.17332517317918028, -0.08726825321572218,
     -0.030818959797363155, -0.4035231753552345, -0.2432548548202863, -0.21025180388490206, -0.22027400476327608,
     -0.03470514874574704, 0.10190423828571649, 0.007903329616721022, 0.2180827139962418, 0.18520711377885113,
     -0.05081873049910679, -0.5916324443388933, -0.4990384878301687, -0.7144840776391493, -0.6648244207377167,
     -0.8641088655948388, -1.0, -0.7915094554620477, -0.7888518494500539, -0.7880992371500346,
     -0.7176356499000376, -0.577571561715197, -0.3302491301170063, -0.6197479333087473, -0.8093780766424776,
     -0.7857284810239774, -0.8184016278516252, -0.856085114625458, -0.8011409547877026, -0.7343419675499299,
     -0.9687525962434087, -0.8895647090944201, -0.9385814170930382, -0.7079775812147832, -0.42865823589021523,
     -0.4888584691757628, -0.4545533426131556, -0.36224323989682683, -0.13758291735703998, -0.18216260860944533,
     -0.25909332318203837, -0.13477675208776596, 0.113771334378308, 0.03156561421132387, -0.17884845094226376,
     -0.3451256634287193, -0.5625985188984367, -0.425740396069319, -0.25823297277158286, 0.03256663527800763,
     -0.33336912211502445, -0.19204519240687234, -0.49944365828821335, -0.33629078378728217, -0.1068047062888251,
     -0.053387668919622655, 0.05051264512607778, 0.1323364771068305, 0.22791029212007485, 0.3935192522525164,
     0.11581733837850683, 0.5459860470021236, 0.16298946216682397, 0.2537366436841455, 0.45245283948018633,
     0.6944562889566643, 0.6982371010118125, 0.6099408841826546, 0.37531409349476585, 0.1689885462981986,
     0.4872021080907645, 0.5564579735302622, 0.25504629985113736, 0.09812026897616, -0.011164360419088637]


def test_read_walk(exercise_results):
    walk_arr, _, _, _ = exercise_results
    target = numpy.array(WALK_DATA)
    assert numpy.array_equal(walk_arr, target)


def test_walk_figure_exists():
    assert os.path.exists('figures/walk.png')


def test_min_max(exercise_results):
    _, walk_min, walk_max, _ = exercise_results
    assert walk_min == pytest.approx(-8.302338202148741)
    assert walk_max == pytest.approx(2.1664120840756147)


def test_walk_arr_scaled(exercise_results):
    _, _, _, walk_arr_scaled = exercise_results
    target = numpy.array(WALK_DATA_SCALED)
    # assert numpy.array_equal(walk_arr_scaled, target)
    assert numpy.allclose(walk_arr_scaled, target)


def test_docstring():
    """
    You must always document your code!
    You must provide a descriptive docstring for
    the exercise_6 function.
    """
    assert hw1.exercise_6.__doc__ is not None
